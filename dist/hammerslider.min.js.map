{"version":3,"sources":["hammerslider.js","touch-events.js"],"names":["HammerSlider","_this","options","SLIDER","contentWidth","undefined","container","slides","dotContainer","dots","slideData","transform","currentSlideIndex","lastSlideIndex","isLastSlide","currentDistance","eventListeners","OPTIONS","slideShow","slideInterval","slideSpeed","startSlide","alignSlides","dragThreshold","minimumDragDistance","stopAfterInteraction","infinite","mouseDrag","beforeSlideChange","afterSlideChange","onSetup","classPrefix","mergeObjects","CLASSES","slide","dotItem","dotActiveClass","dragging","target","source","key","hasOwnProperty","getElementChildren","element","selector","all","addEvent","event","func","bool","addEventListener","remove","removeEventListener","addClass","className","classList","add","removeClass","forEachItem","array","callback","startIndex","index","length","returnValue","getItemsAsArray","nodeList","returnArray","item","push","getPercentageOfTotal","fraction","total","getSupportedProperty","property","prefixes","div","document","createElement","prefix","formattedProperty","style","getCurrentTranslate","window","getComputedStyle","getPropertyValue","transformType","match","transformValue","parseFloat","split","offsetWidth","setTranslate","value","threeD","type","translate","to","setItemWidth","containerWidth","width","Math","round","setItemAlignment","alignment","align","left","center","right","setItemAlignDistance","alignItem","itemArray","alignDistance","setDistanceToItem","distanceToThis","reduce","accumulator","innerIndex","setDistanceBetweenItems","lastItemIndex","nextItemIndex","distanceToNext","setItemDistanceToFlip","distanceToFlip","setItemPosition","position","getSlideData","items","setSlideWidth","setSlideAlignDistance","setDistanceToSlide","setDistanceBetweenSlides","setSlideDistanceToFlip","map","getItemsInView","gapToFirstSlide","leftGapWidth","rightGapWidth","itemsToLeft","getItemsInFraction","itemsToRight","concat","direction","itemIndex","getNextItemIndex","getItemPosition","isItemToRight","positionItemsInView","flipData","forEach","getInitialFlipIndex","itemBoundIndex","itemToFlipIndex","resetFlipIndex","getResetPoints","firstSlide","setFlipData","resetPoint","getIntersectPoint","intersect","flipIndex","intersectItem","intersectPoint","flip","currentFlip","oppositeFlip","flipItem","itemPosition","isLastItemIndex","lastIndex","currentItemIndex","slideTo","jumpTo","stopSlideshow","setActiveDot","animate","slideDistance","increment","currPos","currentTime","start","change","render","easeOutQuint","animationFrame","requestAnimationFrame","t","b","c","d","startSlideshow","autoTimeOut","setTimeout","cancelAnimationFrame","clearTimeout","shouldResumeSlideshow","autoSlide","activeClass","onWidthChange","getEventHandler","slideToIndex","handler","click","focus","e","scrollLeft","setItemEventHandler","bubbles","listener","setupSlider","setSlideFocusEvent","setDotClickEvent","next","prev","stop","init","startSlideIndex","TouchEvents","touchStateCallback","o","preventDefault","clicksAllowed","mouse","move","end","diff","eventType","axis","support","pointerEvents","navigator","pointerEnabled","msPointerEvents","msPointerEnabled","eventModel","events","checks","touches","scale","isPrimary","buttons","pointerType","MSPOINTER_TYPE_TOUCH","MSPOINTER_TYPE_PEN","targetObj","sourceObject","el","removeEvent","getDiff","X","clientX","Y","clientY","time","Date","getTime","touchStart","touchMove","touchEnd","abs","blur"],"mappings":"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","file":"hammerslider.min.js","sourcesContent":["function HammerSlider(_this, options) {\n  'use strict';\n\n  // Main declarations\n  const SLIDER = {\n    contentWidth: undefined,\n    container: undefined,\n    slides: undefined,\n    dotContainer: undefined,\n    dots: undefined,\n    slideData: undefined,\n    transform: undefined,\n    currentSlideIndex: undefined,\n    lastSlideIndex: undefined,\n    isLastSlide: undefined,\n    currentDistance: undefined,\n    eventListeners: undefined\n  };\n\n\n  // Default options\n  const OPTIONS = {\n    slideShow: false,\n    slideInterval: 5000,\n    slideSpeed: 1200,\n    //touchSpeed: 800,\n    startSlide: 0,\n    alignSlides: 'center',\n    dragThreshold: 10,\n    minimumDragDistance: 30,\n    stopAfterInteraction: true,\n    infinite: true,\n    mouseDrag: false,\n    dotContainer: undefined,\n    beforeSlideChange: undefined,\n    afterSlideChange: undefined,\n    onSetup: undefined,\n    classPrefix: 'c-slider'\n  };\n\n\n  // Merge user options into defaults\n  options && mergeObjects(OPTIONS, options);\n\n\n  // Class names\n  const CLASSES = {\n    container: `${OPTIONS.classPrefix}__container`,\n    slide: `${OPTIONS.classPrefix}__slide`,\n    dotContainer: `${OPTIONS.classPrefix}__dots`,\n    dotItem: `${OPTIONS.classPrefix}__dot`,\n    dotActiveClass: `${OPTIONS.classPrefix}__dot--is-active`,\n    dragging: `${OPTIONS.classPrefix}__container--is-dragging`,\n    mouseDrag: `${OPTIONS.classPrefix}__container--mouse-drag-enabled`\n  };\n\n\n  // Change to Object.assign()\n  function mergeObjects(target, source) {\n    for (let key in source) {\n      if (source.hasOwnProperty(key)) {\n        target[key] = source[key];\n      }\n    }\n    return target;\n  }\n\n\n  function getElementChildren(element, selector, all) {\n    return element && element[`querySelector${(all ? 'All' : '')}`](selector);\n  }\n\n\n  function addEvent(element, event, func, bool) {\n    element.addEventListener(event, func, !!bool);\n    return { remove: () => element.removeEventListener(event, func, !!bool) };\n  }\n\n\n  function addClass(element, className) {\n    element && element.classList.add(className);\n  }\n\n\n  function removeClass(element, className) {\n    element && element.classList.remove(className);\n  }\n\n\n  function forEachItem(array, callback, startIndex) {\n    for (let index = startIndex || 0; index < array.length; index += 1) {\n      const returnValue = callback(array[index], index, array);\n      if (returnValue) return returnValue;\n    }\n    return false;\n  }\n\n\n  function getItemsAsArray(nodeList) {\n    const returnArray = [];\n    if (nodeList) forEachItem(nodeList, (item) => { returnArray.push(item) });\n    return returnArray;\n  }\n\n\n  function getPercentageOfTotal(fraction, total) {\n    return fraction / total * 100;\n  }\n\n\n  function getSupportedProperty(property) {\n    const prefixes = ['', 'webkit', 'moz', 'ms', 'o'];\n    const div = document.createElement('div');\n\n    return forEachItem(prefixes, (prefix) => {\n      const formattedProperty = `${(prefix ? `-${prefix}-`: '')}${property}`;\n      if (typeof div.style[formattedProperty] !== 'undefined') return formattedProperty;\n    });\n  }\n\n\n  function getCurrentTranslate(element) {\n    const transform = window.getComputedStyle(element, null).getPropertyValue(SLIDER.transform);\n    const transformType = transform.match('matrix3d') ? 12 : 4;\n    const transformValue = parseFloat(transform.split(',')[transformType]);\n    return getPercentageOfTotal(transformValue, element.offsetWidth);\n  }\n\n\n  function setTranslate(element, value, threeD) {\n    const type = threeD ? '3d' : 'X';\n    const translate = to => element.style[SLIDER.transform] = `translate${type}(${to}%${threeD ? ',0,0' : ''})`;\n    if (value !== false) translate(value);\n    return translate;\n  }\n\n\n  /* ------ Item calculations ------ */\n\n  function setItemWidth(containerWidth) {\n    return (item, index) => {\n      const width = Math.round(getPercentageOfTotal(item.element.offsetWidth, containerWidth));\n      return mergeObjects(item, { width });\n    };\n  }\n\n\n  function setItemAlignment(alignment) {\n    const align = {\n      left: () => 0,\n      center: width => (100 - width) / 2,\n      right: width => 100 - width\n    };\n    return align[alignment] || align['center'];\n  }\n\n\n  function setItemAlignDistance(alignItem) {\n    return (item, index, itemArray) => {\n      const alignDistance = alignItem(item.width);\n      return mergeObjects(item, { alignDistance });\n    };\n  }\n\n\n  function setDistanceToItem() {\n    return (item, index, itemArray) => {\n      const distanceToThis = itemArray.reduce((accumulator, {width}, innerIndex) => {\n        if (innerIndex > index) return accumulator;\n        return accumulator + (innerIndex === index ? item.alignDistance : -width);\n      }, 0);\n      return mergeObjects(item, { distanceToThis });\n    };\n  }\n\n\n  function setDistanceBetweenItems(lastItemIndex) {\n    return (item, index, itemArray) => {\n      const nextItemIndex = !index ? lastItemIndex : index - 1;\n      const distanceToNext = itemArray[nextItemIndex].distanceToThis - item.distanceToThis;\n      return mergeObjects(item, { distanceToNext });\n    };\n  }\n\n\n  function setItemDistanceToFlip(lastItemIndex) {\n    return (item, index, itemArray) => {\n      const distanceToFlip = itemArray.reduce((accumulator, {width}) =>\n        accumulator + getPercentageOfTotal(width, item.width), 0);\n      return mergeObjects(item, { distanceToFlip });\n    };\n  }\n\n\n  function setItemPosition(item, position) {\n    setTranslate(item.element, position);\n    return mergeObjects(item, { position });\n  }\n\n\n  function getSlideData(container, items, lastItemIndex) {\n    const setSlideWidth = setItemWidth(container.offsetWidth);\n    const setSlideAlignDistance = setItemAlignDistance(setItemAlignment(OPTIONS.alignSlides));\n    const setDistanceToSlide = setDistanceToItem();\n    const setDistanceBetweenSlides = setDistanceBetweenItems(lastItemIndex);\n    const setSlideDistanceToFlip = setItemDistanceToFlip(lastItemIndex);\n\n    const slideData = [...items]\n      .map(element => ({ element }))\n      .map(setSlideWidth)\n      .map(setSlideAlignDistance)\n      .map(setDistanceToSlide)\n      .map(setDistanceBetweenSlides)\n      .map(setSlideDistanceToFlip);\n\n    // Infinite sliding specific calculations - Move to separate func\n    if (OPTIONS.infinite) {\n      SLIDER.contentWidth = slideData.reduce((accumulator, {width}) => accumulator + width, 0);\n      slideData[0].distanceToNext += SLIDER.contentWidth;\n    }\n    return slideData;\n  }\n\n\n  /* ------ Flip calculations ------ */\n\n  function getItemsInView() {\n    const gapToFirstSlide = SLIDER.slideData[0].distanceToThis;\n    const leftGapWidth = gapToFirstSlide + 1;\n    const rightGapWidth = 100 - leftGapWidth + 2;\n    const itemsToLeft = getItemsInFraction(leftGapWidth, -1, 0);\n    const itemsToRight = getItemsInFraction(rightGapWidth, 1, SLIDER.lastSlideIndex);\n\n    return {\n      items: itemsToLeft.concat(itemsToRight),\n      itemsToLeft,\n      itemsToRight\n    };\n  }\n\n\n  function getItemsInFraction(fraction, direction, itemIndex) {\n    const items = [];\n    let accumulator = 0;\n\n    return forEachItem(SLIDER.slideData, (item, index, itemArray) => {\n      if (accumulator >= fraction) return items;\n      itemIndex = getNextItemIndex(itemIndex, direction);\n      accumulator += itemArray[itemIndex].width;\n      items.push(itemIndex);\n    });\n  }\n\n\n  function getItemPosition(item, direction, isItemToRight) {\n    const position = {\n      '1': isItemToRight ? 0 : item.distanceToFlip * -1,\n      '-1': isItemToRight ? item.distanceToFlip : 0\n    };\n    return position[direction];\n  }\n\n\n  function positionItemsInView(direction) {\n    let isItemToRight = false;\n\n    SLIDER.flipData.items.forEach((itemIndex) => {\n      if (!itemIndex) isItemToRight = true;\n      const item = SLIDER.slideData[itemIndex];\n      setItemPosition(item, getItemPosition(item, direction, isItemToRight));\n    });\n  }\n\n\n  function getInitialFlipIndex(items, direction) {\n    const itemBoundIndex = items[items.length - 2] || 0;\n    const itemToFlipIndex = getNextItemIndex(itemBoundIndex, direction);\n    return { itemBoundIndex, itemToFlipIndex };\n  }\n\n\n  function resetFlipIndex(flipData) {\n    mergeObjects(flipData, {\n      '1': getInitialFlipIndex(flipData.itemsToLeft, -1),\n      '-1': getInitialFlipIndex(flipData.itemsToRight, 1)\n    });\n  }\n\n\n  function getResetPoints(contentWidth, firstSlide) {\n    return {\n      '1': -contentWidth + firstSlide.alignDistance + 1,\n      '-1': firstSlide.alignDistance - 1\n    };\n  }\n\n\n  function setFlipData() {\n    const flipData = getItemsInView();\n    const resetPoint = getResetPoints(SLIDER.contentWidth, SLIDER.slideData[0]);\n    mergeObjects(flipData, resetFlipIndex(flipData));\n    mergeObjects(flipData, { resetPoint });\n\n    SLIDER.flipData = flipData;\n    positionItemsInView(1);\n  }\n\n\n  function getIntersectPoint(itemArray, direction) {\n    const intersect = {\n      '1': item => item.distanceToThis - item.alignDistance - 1,\n      '-1': item => item.distanceToThis - item.alignDistance + (100 - item.width + 1)\n    };\n    return (flipIndex, intersectItem) => {\n      //if (itemArray.indexOf(flipIndex) < 0) return;\n      const intersectPoint = intersect[direction](intersectItem);\n      if (!intersectItem.position) return intersectPoint;\n      return intersectPoint + SLIDER.contentWidth * (intersectItem.position < 0 ? 1 : -1);\n    };\n  }\n\n\n  /* DO HUGE REFACTOR BELOW */\n  function flip(position, direction) {\n    const slideData = SLIDER.slideData;\n    const flipData = SLIDER.flipData;\n    const currentFlip = flipData[direction];\n    const oppositeFlip = flipData[direction * -1];\n    const firstSlide = slideData[0];\n    const intersectItem = slideData[currentFlip.itemBoundIndex];\n    const flipItem = slideData[currentFlip.itemToFlipIndex];\n    const intersect = getIntersectPoint(flipData.items, direction);\n    const resetPoint = flipData.resetPoint[direction];\n\n    // Forward\n    if (direction === 1) {\n\n      if (position < resetPoint) {\n        resetFlipIndex(flipData);\n        positionItemsInView(direction);\n        return true;\n      }\n\n      const intersectPoint = intersect(currentFlip.itemToFlipIndex, intersectItem);\n      if (!intersectPoint) return;\n\n      if (position < intersectPoint) {\n        const itemPosition = flipItem.position + flipItem.distanceToFlip;\n        setItemPosition(flipItem, itemPosition);\n\n        /*\n        SPECIAL CASE - itemsToLeft.length === 1 && itemsToRight.length === 2\n        mergeObjects(oppositeFlip, {\n          itemBoundIndex: getNextItemIndex(getNextItemIndex(currentFlip.itemBoundIndex, direction), direction),\n          itemToFlipIndex: currentFlip.itemToFlipIndex\n        });\n        */\n\n        mergeObjects(oppositeFlip, {\n          itemBoundIndex: getNextItemIndex(oppositeFlip.itemBoundIndex, direction),\n          itemToFlipIndex: currentFlip.itemToFlipIndex\n        });\n\n        mergeObjects(currentFlip, {\n          itemBoundIndex: getNextItemIndex(currentFlip.itemBoundIndex, direction),\n          itemToFlipIndex: getNextItemIndex(currentFlip.itemToFlipIndex, direction)\n        });\n      }\n\n    // Backward\n    } else {\n\n      if (position > resetPoint) {\n        resetFlipIndex(flipData);\n        positionItemsInView(direction);\n        return true;\n      }\n\n      const intersectPoint = intersect(currentFlip.itemToFlipIndex, intersectItem);\n      if (!intersectPoint) return;\n\n      if (position > intersectPoint) {\n        const itemPosition = flipItem.position - flipItem.distanceToFlip;\n        setItemPosition(flipItem, itemPosition);\n\n        /*\n        SPECIAL CASE - itemsToLeft.length === 1 && itemsToRight.length === 2\n        mergeObjects(oppositeFlip, {\n          itemBoundIndex: getNextItemIndex(getNextItemIndex(currentFlip.itemBoundIndex, direction), direction),\n          itemToFlipIndex: currentFlip.itemToFlipIndex\n        });\n        */\n\n        mergeObjects(oppositeFlip, {\n          itemBoundIndex: getNextItemIndex(oppositeFlip.itemBoundIndex, direction),\n          itemToFlipIndex: currentFlip.itemToFlipIndex\n        });\n\n        mergeObjects(currentFlip, {\n          itemBoundIndex: getNextItemIndex(currentFlip.itemBoundIndex, direction),\n          itemToFlipIndex: getNextItemIndex(currentFlip.itemToFlipIndex, direction)\n        });\n      }\n    }\n\n  }\n  /* DO HUGE REFACTOR ABOVE */\n\n\n  function isLastItemIndex(lastIndex) {\n    return (index) => index === lastIndex;\n  }\n\n\n  function getNextItemIndex(currentItemIndex, direction) {\n    if (direction === 1) {\n      if (SLIDER.isLastSlide(currentItemIndex)) return 0;\n    } else if (!currentItemIndex) {\n      return SLIDER.lastSlideIndex;\n    }\n    return currentItemIndex + direction;\n  }\n\n\n  function slideTo(direction, jumpTo) {\n    /* Clean this mess up */\n    stopSlideshow();\n    const currentSlideIndex = direction ? getNextItemIndex(SLIDER.currentSlideIndex, direction) : jumpTo;\n    let currentDistance;\n\n    if (direction) {\n      const index = direction === 1 ? currentSlideIndex : getNextItemIndex(currentSlideIndex, 1);\n      currentDistance = SLIDER.currentDistance - SLIDER.slideData[index].distanceToNext * direction;\n    } else {\n      /*\n      if ((!SLIDER.currentSlideIndex && SLIDER.isLastSlide(jumpTo)) || (SLIDER.isLastSlide(SLIDER.currentSlideIndex) && !jumpTo)) {\n        slideTo(slideDirection * -1);\n        return;\n      }\n      */\n      currentDistance = SLIDER.slideData[jumpTo].distanceToThis;\n    }\n\n    mergeObjects(SLIDER, { currentSlideIndex, currentDistance });\n    if (OPTIONS.beforeSlideChange) OPTIONS.beforeSlideChange(currentSlideIndex);\n\n    setActiveDot(currentSlideIndex);\n    animate(currentDistance);\n  }\n\n\n  function animate(slideDistance) {\n    /* Clean this mess up */\n    const translate = setTranslate(SLIDER.container, false, true);\n    const slideSpeed = OPTIONS.slideSpeed;\n    const increment = 20;\n\n    let currPos = getCurrentTranslate(SLIDER.container);\n    let currentTime = 0;\n    let start = currPos;\n    let change = slideDistance - start;\n\n    const direction = slideDistance < currPos ? 1 : -1;\n\n    function render() {\n      // Sliding ended\n      if (currentTime > slideSpeed) {\n        //shouldResumeSlideshow(autoSlide);\n        //OPTIONS.afterSlideChange && OPTIONS.afterSlideChange();\n      }\n      // Else\n      else {\n        if (OPTIONS.infinite && flip(currPos, direction)) {\n          SLIDER.currentDistance += SLIDER.contentWidth * direction;\n          start += SLIDER.contentWidth * direction;\n        }\n        currPos = easeOutQuint(currentTime, start, change, slideSpeed);\n        currentTime += increment;\n        translate(currPos);\n        SLIDER.animationFrame = requestAnimationFrame(render);\n      }\n    }\n    SLIDER.animationFrame = requestAnimationFrame(render);\n  }\n\n\n  function easeOutQuint(t, b, c, d) {\n    t /= d;\n    t--;\n    return c * (t * t * t * t * t + 1) + b;\n  }\n\n\n  function startSlideshow() {\n    mergeObjects(SLIDER, {\n      autoTimeOut: setTimeout(() => slideTo(1), OPTIONS.slideInterval)\n    });\n  }\n\n\n  function stopSlideshow() {\n    cancelAnimationFrame(SLIDER.animationFrame);\n    clearTimeout(SLIDER.autoTimeOut);\n  }\n\n\n  function shouldResumeSlideshow(autoSlide) {\n    if ((OPTIONS.slideShow && !OPTIONS.stopAfterInteraction) || autoSlide) startSlideshow();\n  }\n\n\n  function setActiveDot(index) {\n    if (SLIDER.dots) {\n      const activeClass = CLASSES.dotActiveClass;\n      removeClass(getElementChildren(SLIDER.dotContainer, `.${activeClass}`), activeClass);\n      addClass(SLIDER.dots[index], activeClass);\n    }\n  }\n\n\n  function onWidthChange() {\n    // update slider width\n    //stopSlideshow();\n    //shouldResumeSlideshow();\n  }\n\n\n  /*function touchInit() {\n    let startPos,\n      currPos,\n      currentSlide;\n\n    TouchEvents(SLIDER.container, {\n      mouse: OPTIONS.mouseDrag,\n      dragThreshold: OPTIONS.dragThreshold,\n      // Pass touch state actions\n      start: (event) => {\n        stopSlideshow();\n        startPos = getCurrentTranslate() / SLIDER.container.offsetWidth * 100;\n        currentSlide = slideIndex % nrOfSlides;\n        // Add drag class\n        addClass(SLIDER.container, CLASSES.dragging);\n      },\n      move: (event, direction, diff) => {\n        if (direction === 'left' || direction === 'right') {\n          const horizontalDiff = diff.X / SLIDER.container.offsetWidth * 100;\n          // Calculate changed position\n          currPos = startPos + horizontalDiff;\n\n          if (!OPTIONS.rewind) {\n            flip(currPos, direction === 'left' ? 1 : -1);\n          } else if (!currentSlide && direction === 'right' || u.isLastSlide(currentSlide) && direction === 'left') {\n            // Resist dragging if it's first slide\n            // or last and if rewind is true\n            currPos = startPos + (diff.X / 2.5);\n          }\n          setTranslate(SLIDER.container, currPos);\n        }\n      },\n      end: (event, direction, diff) => {\n        let targetSlide = slideIndex;\n\n        // Only set new target slide if drag exceeds minimum drag distance\n        if (Math.abs(diff.X) > OPTIONS.minimumDragDistance) {\n          if (direction === 'left') {\n            targetSlide = OPTIONS.rewind && u.isLastSlide(currentSlide) ? u.lastSlide : u.getNextSlideNr(1);\n          } else if (direction === 'right') {\n            targetSlide = OPTIONS.rewind && !currentSlide ? 0 : u.getNextSlideNr(-1);\n          }\n        }\n        slideTo(targetSlide, false, OPTIONS.touchSpeed);\n        // Remove drag class\n        removeClass(SLIDER.container, CLASSES.dragging);\n      }\n    });\n  }*/\n\n\n  function getEventHandler(event, index) {\n    const slideToIndex = (index) => slideTo(false, index);\n    const handler = {\n      click: e => slideToIndex(index),\n      focus: (e) => {\n        stopSlideshow();\n        _this.scrollLeft = 0;\n        slideToIndex(index);\n      }\n    };\n    return handler[event];\n  }\n\n\n  function setItemEventHandler(event, bubbles) {\n    return (item, index) => {\n      const listener = addEvent(item, event, getEventHandler(event, index), bubbles);\n      return listener;\n    };\n  }\n\n\n  function setupSlider(element, startIndex) {\n    // Setup slide variables\n    const container = getElementChildren(element, `.${CLASSES.container}`);\n    const slides = getItemsAsArray(getElementChildren(container, `.${CLASSES.slide}`, true));\n    const dotContainer = OPTIONS.dotContainer || getElementChildren(element, `.${CLASSES.dotContainer}`);\n    const dots = getItemsAsArray(getElementChildren(dotContainer, `.${CLASSES.dotItem}`, true));\n    const currentSlideIndex = startIndex;\n    const lastSlideIndex = slides.length - 1;\n    const isLastSlide = isLastItemIndex(lastSlideIndex);\n    const slideData = getSlideData(container, slides, lastSlideIndex);\n    const currentDistance = slideData[currentSlideIndex].distanceToThis;\n    const transform = getSupportedProperty('transform');\n    const setSlideFocusEvent = setItemEventHandler('focus', true);\n    const setDotClickEvent = setItemEventHandler('click', false);\n    const eventListeners = slides.map(setSlideFocusEvent).concat(dots.map(setDotClickEvent));\n\n    // Bail if only one slide OR if transform is not supported\n    if (!lastSlideIndex || !transform) return;\n\n    // Merge variables into SLIDER\n    mergeObjects(SLIDER, {\n      container,\n      slides,\n      dotContainer,\n      dots,\n      slideData,\n      transform,\n      currentSlideIndex,\n      lastSlideIndex,\n      isLastSlide,\n      currentDistance,\n      eventListeners\n    });\n\n    // Set position and active dot\n    setTranslate(container, currentDistance);\n    setActiveDot(currentSlideIndex);\n\n    // Conditional actions\n    //if (OPTIONS.infinite) setItemInfinitePosition(currentSlideIndex, lastSlideIndex, slideData);\n\n    if (OPTIONS.mouseDrag) addClass(container, CLASSES.mouseDrag);\n    if (OPTIONS.slideShow) startSlideshow();\n\n    // REMOVE\n    setFlipData();\n\n    if (OPTIONS.onSetup) setTimeout(() => OPTIONS.onSetup(SLIDER), 0);\n  }\n\n\n  // Init\n  //setupSlider(_this, OPTIONS.startSlide);\n\n\n  // Expose slider API\n  return {\n    next: () => slideTo(1),\n    prev: () => slideTo(-1),\n    stop: stopSlideshow,\n    start: startSlideshow,\n    init: (startSlideIndex) => {\n      // killSlider();\n      setupSlider(_this, startSlideIndex || OPTIONS.startSlide);\n    }\n    //kill: killSlider,\n    //moveTo: (slideNr, speed) => slideTo(slideNr, true, speed)\n  };\n}\n","/*!\n * Event Burrito is a touch / mouse / pointer event unifier\n * https://github.com/wilddeer/Event-Burrito\n * Copyright Oleg Korsunsky | http://wd.dizaina.net/\n *\n * MIT License\n *\n * NOTE: Event Burrito has been modified from\n * its original form to suit this project.\n */\n\n/* exported TouchEvents */\nfunction TouchEvents(_this, options) {\n  'use strict';\n\n  const touchStateCallback = () => {},\n    o = {\n      preventDefault: true,\n      clicksAllowed: true,\n      mouse: true,\n      dragThreshold: 10, // Minimum distance to determine swipe direction\n      start: touchStateCallback,\n      move: touchStateCallback,\n      end: touchStateCallback\n    };\n        \n  // Merge user options into defaults\n  options && mergeObjects(o, options);\n\n  let start = {},\n    diff = {},\n    direction,\n    eventType,\n    axis,\n    support = {\n      pointerEvents: !!window.navigator.pointerEnabled,\n      msPointerEvents: !!window.navigator.msPointerEnabled\n    },\n    eventModel = (support.pointerEvents ? 1 : (support.msPointerEvents ? 2 : 0)),\n    events = [\n      ['touchstart', 'touchmove', 'touchend', 'touchcancel'], //touch events\n      ['pointerdown', 'pointermove', 'pointerup', 'pointercancel'], //pointer events\n      ['MSPointerDown', 'MSPointerMove', 'MSPointerUp', 'MSPointerCancel'], //IE10 pointer events\n      ['mousedown', 'mousemove', 'mouseup', false] //mouse events\n    ],\n    checks = [\n      //touch events\n      (e) =>{\n        //skip the event if it's multitouch or pinch move\n        return (e.touches && e.touches.length > 1) || (e.scale && e.scale !== 1);\n      },\n      //pointer events\n      (e) => {\n        //Skip it, if:\n        //1. event is not primary (other pointers during multitouch),\n        //2. left mouse button is not pressed,\n        //3. mouse drag is disabled and event is not touch\n        return !e.isPrimary || (e.buttons && e.buttons !== 1) || (!o.mouse && e.pointerType !== 'touch' && e.pointerType !== 'pen');\n      },\n      //IE10 pointer events\n      (e) => {\n        //same checks as in pointer events\n        return !e.isPrimary || (e.buttons && e.buttons !== 1) || (!o.mouse && e.pointerType !== e.MSPOINTER_TYPE_TOUCH && e.pointerType !== e.MSPOINTER_TYPE_PEN);\n      },\n      //mouse events\n      (e) => {\n        //skip the event if left mouse button is not pressed\n        //in IE7-8 `buttons` is not defined, in IE9 LMB is 0\n        return (e.buttons && e.buttons !== 1);\n      }\n    ];\n\n\n  function mergeObjects(targetObj, sourceObject) {\n    for (let key in sourceObject) {\n      if (sourceObject.hasOwnProperty(key)) {\n        targetObj[key] = sourceObject[key];\n      }\n    }\n  }\n\n\n  function addEvent(el, event, func, bool) {\n    if (!event) return;\n    el.addEventListener(event, func, !!bool);\n  }\n\n\n  function removeEvent(el, event, func, bool) {\n    if (!event) return;\n    el.removeEventListener(event, func, !!bool);\n  }\n\n\n  function preventDefault(event) {\n    event.preventDefault ? event.preventDefault() : event.returnValue = false;\n  }\n\n\n  function getDiff(event) {\n    diff = {\n      X: (eventType ? event.clientX : event.touches[0].clientX) - start.X,\n      Y: (eventType ? event.clientY : event.touches[0].clientY) - start.Y,\n      time: new Date().getTime() - start.time\n    };\n  }\n\n\n  function touchStart(event, type) {\n    direction = '';\n    o.clicksAllowed = true;\n    eventType = type;\n\n    if (checks[eventType](event)) return;\n    if (preventDefault && eventType) preventDefault(event);\n\n    addEvent(document, events[eventType][1], touchMove);\n    addEvent(document, events[eventType][2], touchEnd);\n    addEvent(document, events[eventType][3], touchEnd);\n\n    start = {\n      X: eventType ? event.clientX : event.touches[0].clientX,\n      Y: eventType ? event.clientY : event.touches[0].clientY,\n      time: new Date().getTime()\n    };\n\n    for (let key in diff) {\n      diff[key] = 0;\n    }\n    o.start(event);\n  }\n\n\n  function touchMove(event) {\n    getDiff(event);\n\n    //Prevent document from scrolling while swiping because some mobile browsers flicker during transition and scroll.\n    document[`on${events[eventType][1]}`] = (e) => { preventDefault(e); };\n\n    if (!axis) {\n      axis = (o.dragThreshold < Math.abs(diff.X)) ? 'X' : (o.dragThreshold < Math.abs(diff.Y)) ? 'Y' : false;\n    } else {\n      if (axis === 'X') {\n        direction = (diff.X < 0) ? 'left' : 'right';\n        preventDefault && preventDefault(event);\n      } else if (axis === 'Y') {\n        direction = (diff.Y < 0) ? 'up' : 'down';\n      }\n    }\n\n    o.move(event, direction, diff);\n  }\n\n\n  function touchEnd(event) {\n    !o.clicksAllowed && event.target && event.target.blur && event.target.blur();\n\n    removeEvent(document, events[eventType][1], touchMove);\n    removeEvent(document, events[eventType][2], touchEnd);\n    removeEvent(document, events[eventType][3], touchEnd);\n\n    //Enable document scrolling\n    document[`on${events[eventType][1]}`] = (e) => { return true; };\n\n    o.end(event, direction, diff);\n    axis = false;\n  }\n\n\n  function init() {\n    // Bind touchstart\n    addEvent(_this, events[eventModel][0], (event) => {\n      touchStart(event, eventModel); \n    });\n    // Prevent stuff from dragging when using mouse\n    addEvent(_this, 'dragstart', preventDefault);\n    \n    // Bind mousedown if necessary\n    if (o.mouse && !eventModel) {\n      addEvent(_this, events[3][0], (event) => {\n        touchStart(event, 3);\n      });\n    }\n\n    // No clicking during touch\n    addEvent(_this, 'click', (event) => {\n      o.clicksAllowed ? touchStateCallback(event) : preventDefault(event);\n    });\n  }\n\n  // Init touch listeners\n  init();\n}"]}